# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type Client @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  name: String! @index(name: "byName", queryField: "clientByName")
  company: String
  phone: String
  email: String
  notes: String
  favorite: Boolean @default(value: "false")
  connectionHistory: [ConnectionHistory] @hasMany
  clientGroup: [ClientGroup] @hasMany
  properties: [Property] @hasMany(indexName: "")
  tasks: [Task] @hasMany(indexName: "byClient", fields: ["id"])
}

type ConnectionHistory @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  title: String!
  description: String
}

type ClientGroup @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  title: String @index(name: "byTitle", queryField: "groupByTitle")
}

type Property @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  street: String!
  city: String
  state: String
  zip: Int
  client: Client @belongsTo
}

type Task @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  clientId: ID @index(name: "byClient", sortKeyFields: ["title"])
  title: String!
  content: String
  completed: Boolean
  date: String
  client: Client @belongsTo(fields: ["clientId"])
}

type Mutation {
  batchDelete(ids: [ID]): [Client]
}